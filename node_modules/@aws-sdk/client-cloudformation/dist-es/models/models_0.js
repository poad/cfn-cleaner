import { CloudFormationServiceException as __BaseException } from "./CloudFormationServiceException";
export var AccountFilterType;
(function (AccountFilterType) {
    AccountFilterType["DIFFERENCE"] = "DIFFERENCE";
    AccountFilterType["INTERSECTION"] = "INTERSECTION";
    AccountFilterType["NONE"] = "NONE";
    AccountFilterType["UNION"] = "UNION";
})(AccountFilterType || (AccountFilterType = {}));
export var AccountGateStatus;
(function (AccountGateStatus) {
    AccountGateStatus["FAILED"] = "FAILED";
    AccountGateStatus["SKIPPED"] = "SKIPPED";
    AccountGateStatus["SUCCEEDED"] = "SUCCEEDED";
})(AccountGateStatus || (AccountGateStatus = {}));
export var ThirdPartyType;
(function (ThirdPartyType) {
    ThirdPartyType["HOOK"] = "HOOK";
    ThirdPartyType["MODULE"] = "MODULE";
    ThirdPartyType["RESOURCE"] = "RESOURCE";
})(ThirdPartyType || (ThirdPartyType = {}));
export var VersionBump;
(function (VersionBump) {
    VersionBump["MAJOR"] = "MAJOR";
    VersionBump["MINOR"] = "MINOR";
})(VersionBump || (VersionBump = {}));
export class CFNRegistryException extends __BaseException {
    constructor(opts) {
        super({
            name: "CFNRegistryException",
            $fault: "client",
            ...opts,
        });
        this.name = "CFNRegistryException";
        this.$fault = "client";
        Object.setPrototypeOf(this, CFNRegistryException.prototype);
        this.Message = opts.Message;
    }
}
export class TypeNotFoundException extends __BaseException {
    constructor(opts) {
        super({
            name: "TypeNotFoundException",
            $fault: "client",
            ...opts,
        });
        this.name = "TypeNotFoundException";
        this.$fault = "client";
        Object.setPrototypeOf(this, TypeNotFoundException.prototype);
        this.Message = opts.Message;
    }
}
export class AlreadyExistsException extends __BaseException {
    constructor(opts) {
        super({
            name: "AlreadyExistsException",
            $fault: "client",
            ...opts,
        });
        this.name = "AlreadyExistsException";
        this.$fault = "client";
        Object.setPrototypeOf(this, AlreadyExistsException.prototype);
        this.Message = opts.Message;
    }
}
export class TypeConfigurationNotFoundException extends __BaseException {
    constructor(opts) {
        super({
            name: "TypeConfigurationNotFoundException",
            $fault: "client",
            ...opts,
        });
        this.name = "TypeConfigurationNotFoundException";
        this.$fault = "client";
        Object.setPrototypeOf(this, TypeConfigurationNotFoundException.prototype);
        this.Message = opts.Message;
    }
}
export var CallAs;
(function (CallAs) {
    CallAs["DELEGATED_ADMIN"] = "DELEGATED_ADMIN";
    CallAs["SELF"] = "SELF";
})(CallAs || (CallAs = {}));
export class TokenAlreadyExistsException extends __BaseException {
    constructor(opts) {
        super({
            name: "TokenAlreadyExistsException",
            $fault: "client",
            ...opts,
        });
        this.name = "TokenAlreadyExistsException";
        this.$fault = "client";
        Object.setPrototypeOf(this, TokenAlreadyExistsException.prototype);
        this.Message = opts.Message;
    }
}
export var Capability;
(function (Capability) {
    Capability["CAPABILITY_AUTO_EXPAND"] = "CAPABILITY_AUTO_EXPAND";
    Capability["CAPABILITY_IAM"] = "CAPABILITY_IAM";
    Capability["CAPABILITY_NAMED_IAM"] = "CAPABILITY_NAMED_IAM";
})(Capability || (Capability = {}));
export var Category;
(function (Category) {
    Category["ACTIVATED"] = "ACTIVATED";
    Category["AWS_TYPES"] = "AWS_TYPES";
    Category["REGISTERED"] = "REGISTERED";
    Category["THIRD_PARTY"] = "THIRD_PARTY";
})(Category || (Category = {}));
export var ChangeAction;
(function (ChangeAction) {
    ChangeAction["Add"] = "Add";
    ChangeAction["Dynamic"] = "Dynamic";
    ChangeAction["Import"] = "Import";
    ChangeAction["Modify"] = "Modify";
    ChangeAction["Remove"] = "Remove";
})(ChangeAction || (ChangeAction = {}));
export var ChangeSource;
(function (ChangeSource) {
    ChangeSource["Automatic"] = "Automatic";
    ChangeSource["DirectModification"] = "DirectModification";
    ChangeSource["ParameterReference"] = "ParameterReference";
    ChangeSource["ResourceAttribute"] = "ResourceAttribute";
    ChangeSource["ResourceReference"] = "ResourceReference";
})(ChangeSource || (ChangeSource = {}));
export var EvaluationType;
(function (EvaluationType) {
    EvaluationType["Dynamic"] = "Dynamic";
    EvaluationType["Static"] = "Static";
})(EvaluationType || (EvaluationType = {}));
export var ResourceAttribute;
(function (ResourceAttribute) {
    ResourceAttribute["CreationPolicy"] = "CreationPolicy";
    ResourceAttribute["DeletionPolicy"] = "DeletionPolicy";
    ResourceAttribute["Metadata"] = "Metadata";
    ResourceAttribute["Properties"] = "Properties";
    ResourceAttribute["Tags"] = "Tags";
    ResourceAttribute["UpdatePolicy"] = "UpdatePolicy";
})(ResourceAttribute || (ResourceAttribute = {}));
export var RequiresRecreation;
(function (RequiresRecreation) {
    RequiresRecreation["Always"] = "Always";
    RequiresRecreation["Conditionally"] = "Conditionally";
    RequiresRecreation["Never"] = "Never";
})(RequiresRecreation || (RequiresRecreation = {}));
export var Replacement;
(function (Replacement) {
    Replacement["Conditional"] = "Conditional";
    Replacement["False"] = "False";
    Replacement["True"] = "True";
})(Replacement || (Replacement = {}));
export var ChangeType;
(function (ChangeType) {
    ChangeType["Resource"] = "Resource";
})(ChangeType || (ChangeType = {}));
export var HookFailureMode;
(function (HookFailureMode) {
    HookFailureMode["FAIL"] = "FAIL";
    HookFailureMode["WARN"] = "WARN";
})(HookFailureMode || (HookFailureMode = {}));
export var HookInvocationPoint;
(function (HookInvocationPoint) {
    HookInvocationPoint["PRE_PROVISION"] = "PRE_PROVISION";
})(HookInvocationPoint || (HookInvocationPoint = {}));
export var HookTargetType;
(function (HookTargetType) {
    HookTargetType["RESOURCE"] = "RESOURCE";
})(HookTargetType || (HookTargetType = {}));
export var ChangeSetHooksStatus;
(function (ChangeSetHooksStatus) {
    ChangeSetHooksStatus["PLANNED"] = "PLANNED";
    ChangeSetHooksStatus["PLANNING"] = "PLANNING";
    ChangeSetHooksStatus["UNAVAILABLE"] = "UNAVAILABLE";
})(ChangeSetHooksStatus || (ChangeSetHooksStatus = {}));
export class ChangeSetNotFoundException extends __BaseException {
    constructor(opts) {
        super({
            name: "ChangeSetNotFoundException",
            $fault: "client",
            ...opts,
        });
        this.name = "ChangeSetNotFoundException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ChangeSetNotFoundException.prototype);
        this.Message = opts.Message;
    }
}
export var ChangeSetStatus;
(function (ChangeSetStatus) {
    ChangeSetStatus["CREATE_COMPLETE"] = "CREATE_COMPLETE";
    ChangeSetStatus["CREATE_IN_PROGRESS"] = "CREATE_IN_PROGRESS";
    ChangeSetStatus["CREATE_PENDING"] = "CREATE_PENDING";
    ChangeSetStatus["DELETE_COMPLETE"] = "DELETE_COMPLETE";
    ChangeSetStatus["DELETE_FAILED"] = "DELETE_FAILED";
    ChangeSetStatus["DELETE_IN_PROGRESS"] = "DELETE_IN_PROGRESS";
    ChangeSetStatus["DELETE_PENDING"] = "DELETE_PENDING";
    ChangeSetStatus["FAILED"] = "FAILED";
})(ChangeSetStatus || (ChangeSetStatus = {}));
export var ExecutionStatus;
(function (ExecutionStatus) {
    ExecutionStatus["AVAILABLE"] = "AVAILABLE";
    ExecutionStatus["EXECUTE_COMPLETE"] = "EXECUTE_COMPLETE";
    ExecutionStatus["EXECUTE_FAILED"] = "EXECUTE_FAILED";
    ExecutionStatus["EXECUTE_IN_PROGRESS"] = "EXECUTE_IN_PROGRESS";
    ExecutionStatus["OBSOLETE"] = "OBSOLETE";
    ExecutionStatus["UNAVAILABLE"] = "UNAVAILABLE";
})(ExecutionStatus || (ExecutionStatus = {}));
export var ChangeSetType;
(function (ChangeSetType) {
    ChangeSetType["CREATE"] = "CREATE";
    ChangeSetType["IMPORT"] = "IMPORT";
    ChangeSetType["UPDATE"] = "UPDATE";
})(ChangeSetType || (ChangeSetType = {}));
export class InsufficientCapabilitiesException extends __BaseException {
    constructor(opts) {
        super({
            name: "InsufficientCapabilitiesException",
            $fault: "client",
            ...opts,
        });
        this.name = "InsufficientCapabilitiesException";
        this.$fault = "client";
        Object.setPrototypeOf(this, InsufficientCapabilitiesException.prototype);
        this.Message = opts.Message;
    }
}
export class LimitExceededException extends __BaseException {
    constructor(opts) {
        super({
            name: "LimitExceededException",
            $fault: "client",
            ...opts,
        });
        this.name = "LimitExceededException";
        this.$fault = "client";
        Object.setPrototypeOf(this, LimitExceededException.prototype);
        this.Message = opts.Message;
    }
}
export var OnFailure;
(function (OnFailure) {
    OnFailure["DELETE"] = "DELETE";
    OnFailure["DO_NOTHING"] = "DO_NOTHING";
    OnFailure["ROLLBACK"] = "ROLLBACK";
})(OnFailure || (OnFailure = {}));
export var RegionConcurrencyType;
(function (RegionConcurrencyType) {
    RegionConcurrencyType["PARALLEL"] = "PARALLEL";
    RegionConcurrencyType["SEQUENTIAL"] = "SEQUENTIAL";
})(RegionConcurrencyType || (RegionConcurrencyType = {}));
export class InvalidOperationException extends __BaseException {
    constructor(opts) {
        super({
            name: "InvalidOperationException",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidOperationException";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidOperationException.prototype);
        this.Message = opts.Message;
    }
}
export class OperationIdAlreadyExistsException extends __BaseException {
    constructor(opts) {
        super({
            name: "OperationIdAlreadyExistsException",
            $fault: "client",
            ...opts,
        });
        this.name = "OperationIdAlreadyExistsException";
        this.$fault = "client";
        Object.setPrototypeOf(this, OperationIdAlreadyExistsException.prototype);
        this.Message = opts.Message;
    }
}
export class OperationInProgressException extends __BaseException {
    constructor(opts) {
        super({
            name: "OperationInProgressException",
            $fault: "client",
            ...opts,
        });
        this.name = "OperationInProgressException";
        this.$fault = "client";
        Object.setPrototypeOf(this, OperationInProgressException.prototype);
        this.Message = opts.Message;
    }
}
export class StackSetNotFoundException extends __BaseException {
    constructor(opts) {
        super({
            name: "StackSetNotFoundException",
            $fault: "client",
            ...opts,
        });
        this.name = "StackSetNotFoundException";
        this.$fault = "client";
        Object.setPrototypeOf(this, StackSetNotFoundException.prototype);
        this.Message = opts.Message;
    }
}
export class StaleRequestException extends __BaseException {
    constructor(opts) {
        super({
            name: "StaleRequestException",
            $fault: "client",
            ...opts,
        });
        this.name = "StaleRequestException";
        this.$fault = "client";
        Object.setPrototypeOf(this, StaleRequestException.prototype);
        this.Message = opts.Message;
    }
}
export class CreatedButModifiedException extends __BaseException {
    constructor(opts) {
        super({
            name: "CreatedButModifiedException",
            $fault: "client",
            ...opts,
        });
        this.name = "CreatedButModifiedException";
        this.$fault = "client";
        Object.setPrototypeOf(this, CreatedButModifiedException.prototype);
        this.Message = opts.Message;
    }
}
export var PermissionModels;
(function (PermissionModels) {
    PermissionModels["SELF_MANAGED"] = "SELF_MANAGED";
    PermissionModels["SERVICE_MANAGED"] = "SERVICE_MANAGED";
})(PermissionModels || (PermissionModels = {}));
export class NameAlreadyExistsException extends __BaseException {
    constructor(opts) {
        super({
            name: "NameAlreadyExistsException",
            $fault: "client",
            ...opts,
        });
        this.name = "NameAlreadyExistsException";
        this.$fault = "client";
        Object.setPrototypeOf(this, NameAlreadyExistsException.prototype);
        this.Message = opts.Message;
    }
}
export class InvalidChangeSetStatusException extends __BaseException {
    constructor(opts) {
        super({
            name: "InvalidChangeSetStatusException",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidChangeSetStatusException";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidChangeSetStatusException.prototype);
        this.Message = opts.Message;
    }
}
export class StackSetNotEmptyException extends __BaseException {
    constructor(opts) {
        super({
            name: "StackSetNotEmptyException",
            $fault: "client",
            ...opts,
        });
        this.name = "StackSetNotEmptyException";
        this.$fault = "client";
        Object.setPrototypeOf(this, StackSetNotEmptyException.prototype);
        this.Message = opts.Message;
    }
}
export var RegistryType;
(function (RegistryType) {
    RegistryType["HOOK"] = "HOOK";
    RegistryType["MODULE"] = "MODULE";
    RegistryType["RESOURCE"] = "RESOURCE";
})(RegistryType || (RegistryType = {}));
export var IdentityProvider;
(function (IdentityProvider) {
    IdentityProvider["AWS_Marketplace"] = "AWS_Marketplace";
    IdentityProvider["Bitbucket"] = "Bitbucket";
    IdentityProvider["GitHub"] = "GitHub";
})(IdentityProvider || (IdentityProvider = {}));
export var PublisherStatus;
(function (PublisherStatus) {
    PublisherStatus["UNVERIFIED"] = "UNVERIFIED";
    PublisherStatus["VERIFIED"] = "VERIFIED";
})(PublisherStatus || (PublisherStatus = {}));
export var StackDriftDetectionStatus;
(function (StackDriftDetectionStatus) {
    StackDriftDetectionStatus["DETECTION_COMPLETE"] = "DETECTION_COMPLETE";
    StackDriftDetectionStatus["DETECTION_FAILED"] = "DETECTION_FAILED";
    StackDriftDetectionStatus["DETECTION_IN_PROGRESS"] = "DETECTION_IN_PROGRESS";
})(StackDriftDetectionStatus || (StackDriftDetectionStatus = {}));
export var StackDriftStatus;
(function (StackDriftStatus) {
    StackDriftStatus["DRIFTED"] = "DRIFTED";
    StackDriftStatus["IN_SYNC"] = "IN_SYNC";
    StackDriftStatus["NOT_CHECKED"] = "NOT_CHECKED";
    StackDriftStatus["UNKNOWN"] = "UNKNOWN";
})(StackDriftStatus || (StackDriftStatus = {}));
export var HookStatus;
(function (HookStatus) {
    HookStatus["HOOK_COMPLETE_FAILED"] = "HOOK_COMPLETE_FAILED";
    HookStatus["HOOK_COMPLETE_SUCCEEDED"] = "HOOK_COMPLETE_SUCCEEDED";
    HookStatus["HOOK_FAILED"] = "HOOK_FAILED";
    HookStatus["HOOK_IN_PROGRESS"] = "HOOK_IN_PROGRESS";
})(HookStatus || (HookStatus = {}));
export var ResourceStatus;
(function (ResourceStatus) {
    ResourceStatus["CREATE_COMPLETE"] = "CREATE_COMPLETE";
    ResourceStatus["CREATE_FAILED"] = "CREATE_FAILED";
    ResourceStatus["CREATE_IN_PROGRESS"] = "CREATE_IN_PROGRESS";
    ResourceStatus["DELETE_COMPLETE"] = "DELETE_COMPLETE";
    ResourceStatus["DELETE_FAILED"] = "DELETE_FAILED";
    ResourceStatus["DELETE_IN_PROGRESS"] = "DELETE_IN_PROGRESS";
    ResourceStatus["DELETE_SKIPPED"] = "DELETE_SKIPPED";
    ResourceStatus["IMPORT_COMPLETE"] = "IMPORT_COMPLETE";
    ResourceStatus["IMPORT_FAILED"] = "IMPORT_FAILED";
    ResourceStatus["IMPORT_IN_PROGRESS"] = "IMPORT_IN_PROGRESS";
    ResourceStatus["IMPORT_ROLLBACK_COMPLETE"] = "IMPORT_ROLLBACK_COMPLETE";
    ResourceStatus["IMPORT_ROLLBACK_FAILED"] = "IMPORT_ROLLBACK_FAILED";
    ResourceStatus["IMPORT_ROLLBACK_IN_PROGRESS"] = "IMPORT_ROLLBACK_IN_PROGRESS";
    ResourceStatus["ROLLBACK_COMPLETE"] = "ROLLBACK_COMPLETE";
    ResourceStatus["ROLLBACK_FAILED"] = "ROLLBACK_FAILED";
    ResourceStatus["ROLLBACK_IN_PROGRESS"] = "ROLLBACK_IN_PROGRESS";
    ResourceStatus["UPDATE_COMPLETE"] = "UPDATE_COMPLETE";
    ResourceStatus["UPDATE_FAILED"] = "UPDATE_FAILED";
    ResourceStatus["UPDATE_IN_PROGRESS"] = "UPDATE_IN_PROGRESS";
    ResourceStatus["UPDATE_ROLLBACK_COMPLETE"] = "UPDATE_ROLLBACK_COMPLETE";
    ResourceStatus["UPDATE_ROLLBACK_FAILED"] = "UPDATE_ROLLBACK_FAILED";
    ResourceStatus["UPDATE_ROLLBACK_IN_PROGRESS"] = "UPDATE_ROLLBACK_IN_PROGRESS";
})(ResourceStatus || (ResourceStatus = {}));
export var StackInstanceDetailedStatus;
(function (StackInstanceDetailedStatus) {
    StackInstanceDetailedStatus["CANCELLED"] = "CANCELLED";
    StackInstanceDetailedStatus["FAILED"] = "FAILED";
    StackInstanceDetailedStatus["INOPERABLE"] = "INOPERABLE";
    StackInstanceDetailedStatus["PENDING"] = "PENDING";
    StackInstanceDetailedStatus["RUNNING"] = "RUNNING";
    StackInstanceDetailedStatus["SUCCEEDED"] = "SUCCEEDED";
})(StackInstanceDetailedStatus || (StackInstanceDetailedStatus = {}));
export var StackInstanceStatus;
(function (StackInstanceStatus) {
    StackInstanceStatus["CURRENT"] = "CURRENT";
    StackInstanceStatus["INOPERABLE"] = "INOPERABLE";
    StackInstanceStatus["OUTDATED"] = "OUTDATED";
})(StackInstanceStatus || (StackInstanceStatus = {}));
export class StackInstanceNotFoundException extends __BaseException {
    constructor(opts) {
        super({
            name: "StackInstanceNotFoundException",
            $fault: "client",
            ...opts,
        });
        this.name = "StackInstanceNotFoundException";
        this.$fault = "client";
        Object.setPrototypeOf(this, StackInstanceNotFoundException.prototype);
        this.Message = opts.Message;
    }
}
export var StackResourceDriftStatus;
(function (StackResourceDriftStatus) {
    StackResourceDriftStatus["DELETED"] = "DELETED";
    StackResourceDriftStatus["IN_SYNC"] = "IN_SYNC";
    StackResourceDriftStatus["MODIFIED"] = "MODIFIED";
    StackResourceDriftStatus["NOT_CHECKED"] = "NOT_CHECKED";
})(StackResourceDriftStatus || (StackResourceDriftStatus = {}));
export var DifferenceType;
(function (DifferenceType) {
    DifferenceType["ADD"] = "ADD";
    DifferenceType["NOT_EQUAL"] = "NOT_EQUAL";
    DifferenceType["REMOVE"] = "REMOVE";
})(DifferenceType || (DifferenceType = {}));
export var StackStatus;
(function (StackStatus) {
    StackStatus["CREATE_COMPLETE"] = "CREATE_COMPLETE";
    StackStatus["CREATE_FAILED"] = "CREATE_FAILED";
    StackStatus["CREATE_IN_PROGRESS"] = "CREATE_IN_PROGRESS";
    StackStatus["DELETE_COMPLETE"] = "DELETE_COMPLETE";
    StackStatus["DELETE_FAILED"] = "DELETE_FAILED";
    StackStatus["DELETE_IN_PROGRESS"] = "DELETE_IN_PROGRESS";
    StackStatus["IMPORT_COMPLETE"] = "IMPORT_COMPLETE";
    StackStatus["IMPORT_IN_PROGRESS"] = "IMPORT_IN_PROGRESS";
    StackStatus["IMPORT_ROLLBACK_COMPLETE"] = "IMPORT_ROLLBACK_COMPLETE";
    StackStatus["IMPORT_ROLLBACK_FAILED"] = "IMPORT_ROLLBACK_FAILED";
    StackStatus["IMPORT_ROLLBACK_IN_PROGRESS"] = "IMPORT_ROLLBACK_IN_PROGRESS";
    StackStatus["REVIEW_IN_PROGRESS"] = "REVIEW_IN_PROGRESS";
    StackStatus["ROLLBACK_COMPLETE"] = "ROLLBACK_COMPLETE";
    StackStatus["ROLLBACK_FAILED"] = "ROLLBACK_FAILED";
    StackStatus["ROLLBACK_IN_PROGRESS"] = "ROLLBACK_IN_PROGRESS";
    StackStatus["UPDATE_COMPLETE"] = "UPDATE_COMPLETE";
    StackStatus["UPDATE_COMPLETE_CLEANUP_IN_PROGRESS"] = "UPDATE_COMPLETE_CLEANUP_IN_PROGRESS";
    StackStatus["UPDATE_FAILED"] = "UPDATE_FAILED";
    StackStatus["UPDATE_IN_PROGRESS"] = "UPDATE_IN_PROGRESS";
    StackStatus["UPDATE_ROLLBACK_COMPLETE"] = "UPDATE_ROLLBACK_COMPLETE";
    StackStatus["UPDATE_ROLLBACK_COMPLETE_CLEANUP_IN_PROGRESS"] = "UPDATE_ROLLBACK_COMPLETE_CLEANUP_IN_PROGRESS";
    StackStatus["UPDATE_ROLLBACK_FAILED"] = "UPDATE_ROLLBACK_FAILED";
    StackStatus["UPDATE_ROLLBACK_IN_PROGRESS"] = "UPDATE_ROLLBACK_IN_PROGRESS";
})(StackStatus || (StackStatus = {}));
export var StackSetDriftDetectionStatus;
(function (StackSetDriftDetectionStatus) {
    StackSetDriftDetectionStatus["COMPLETED"] = "COMPLETED";
    StackSetDriftDetectionStatus["FAILED"] = "FAILED";
    StackSetDriftDetectionStatus["IN_PROGRESS"] = "IN_PROGRESS";
    StackSetDriftDetectionStatus["PARTIAL_SUCCESS"] = "PARTIAL_SUCCESS";
    StackSetDriftDetectionStatus["STOPPED"] = "STOPPED";
})(StackSetDriftDetectionStatus || (StackSetDriftDetectionStatus = {}));
export var StackSetDriftStatus;
(function (StackSetDriftStatus) {
    StackSetDriftStatus["DRIFTED"] = "DRIFTED";
    StackSetDriftStatus["IN_SYNC"] = "IN_SYNC";
    StackSetDriftStatus["NOT_CHECKED"] = "NOT_CHECKED";
})(StackSetDriftStatus || (StackSetDriftStatus = {}));
export var StackSetStatus;
(function (StackSetStatus) {
    StackSetStatus["ACTIVE"] = "ACTIVE";
    StackSetStatus["DELETED"] = "DELETED";
})(StackSetStatus || (StackSetStatus = {}));
export var StackSetOperationAction;
(function (StackSetOperationAction) {
    StackSetOperationAction["CREATE"] = "CREATE";
    StackSetOperationAction["DELETE"] = "DELETE";
    StackSetOperationAction["DETECT_DRIFT"] = "DETECT_DRIFT";
    StackSetOperationAction["UPDATE"] = "UPDATE";
})(StackSetOperationAction || (StackSetOperationAction = {}));
export var StackSetOperationStatus;
(function (StackSetOperationStatus) {
    StackSetOperationStatus["FAILED"] = "FAILED";
    StackSetOperationStatus["QUEUED"] = "QUEUED";
    StackSetOperationStatus["RUNNING"] = "RUNNING";
    StackSetOperationStatus["STOPPED"] = "STOPPED";
    StackSetOperationStatus["STOPPING"] = "STOPPING";
    StackSetOperationStatus["SUCCEEDED"] = "SUCCEEDED";
})(StackSetOperationStatus || (StackSetOperationStatus = {}));
export class OperationNotFoundException extends __BaseException {
    constructor(opts) {
        super({
            name: "OperationNotFoundException",
            $fault: "client",
            ...opts,
        });
        this.name = "OperationNotFoundException";
        this.$fault = "client";
        Object.setPrototypeOf(this, OperationNotFoundException.prototype);
        this.Message = opts.Message;
    }
}
export var DeprecatedStatus;
(function (DeprecatedStatus) {
    DeprecatedStatus["DEPRECATED"] = "DEPRECATED";
    DeprecatedStatus["LIVE"] = "LIVE";
})(DeprecatedStatus || (DeprecatedStatus = {}));
export var ProvisioningType;
(function (ProvisioningType) {
    ProvisioningType["FULLY_MUTABLE"] = "FULLY_MUTABLE";
    ProvisioningType["IMMUTABLE"] = "IMMUTABLE";
    ProvisioningType["NON_PROVISIONABLE"] = "NON_PROVISIONABLE";
})(ProvisioningType || (ProvisioningType = {}));
export var TypeTestsStatus;
(function (TypeTestsStatus) {
    TypeTestsStatus["FAILED"] = "FAILED";
    TypeTestsStatus["IN_PROGRESS"] = "IN_PROGRESS";
    TypeTestsStatus["NOT_TESTED"] = "NOT_TESTED";
    TypeTestsStatus["PASSED"] = "PASSED";
})(TypeTestsStatus || (TypeTestsStatus = {}));
export var Visibility;
(function (Visibility) {
    Visibility["PRIVATE"] = "PRIVATE";
    Visibility["PUBLIC"] = "PUBLIC";
})(Visibility || (Visibility = {}));
export var RegistrationStatus;
(function (RegistrationStatus) {
    RegistrationStatus["COMPLETE"] = "COMPLETE";
    RegistrationStatus["FAILED"] = "FAILED";
    RegistrationStatus["IN_PROGRESS"] = "IN_PROGRESS";
})(RegistrationStatus || (RegistrationStatus = {}));
export var TemplateStage;
(function (TemplateStage) {
    TemplateStage["Original"] = "Original";
    TemplateStage["Processed"] = "Processed";
})(TemplateStage || (TemplateStage = {}));
export class StackNotFoundException extends __BaseException {
    constructor(opts) {
        super({
            name: "StackNotFoundException",
            $fault: "client",
            ...opts,
        });
        this.name = "StackNotFoundException";
        this.$fault = "client";
        Object.setPrototypeOf(this, StackNotFoundException.prototype);
        this.Message = opts.Message;
    }
}
export var StackInstanceFilterName;
(function (StackInstanceFilterName) {
    StackInstanceFilterName["DETAILED_STATUS"] = "DETAILED_STATUS";
    StackInstanceFilterName["LAST_OPERATION_ID"] = "LAST_OPERATION_ID";
})(StackInstanceFilterName || (StackInstanceFilterName = {}));
export var OperationResultFilterName;
(function (OperationResultFilterName) {
    OperationResultFilterName["OPERATION_RESULT_STATUS"] = "OPERATION_RESULT_STATUS";
})(OperationResultFilterName || (OperationResultFilterName = {}));
export var StackSetOperationResultStatus;
(function (StackSetOperationResultStatus) {
    StackSetOperationResultStatus["CANCELLED"] = "CANCELLED";
    StackSetOperationResultStatus["FAILED"] = "FAILED";
    StackSetOperationResultStatus["PENDING"] = "PENDING";
    StackSetOperationResultStatus["RUNNING"] = "RUNNING";
    StackSetOperationResultStatus["SUCCEEDED"] = "SUCCEEDED";
})(StackSetOperationResultStatus || (StackSetOperationResultStatus = {}));
export class InvalidStateTransitionException extends __BaseException {
    constructor(opts) {
        super({
            name: "InvalidStateTransitionException",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidStateTransitionException";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidStateTransitionException.prototype);
        this.Message = opts.Message;
    }
}
export class OperationStatusCheckFailedException extends __BaseException {
    constructor(opts) {
        super({
            name: "OperationStatusCheckFailedException",
            $fault: "client",
            ...opts,
        });
        this.name = "OperationStatusCheckFailedException";
        this.$fault = "client";
        Object.setPrototypeOf(this, OperationStatusCheckFailedException.prototype);
        this.Message = opts.Message;
    }
}
export var OperationStatus;
(function (OperationStatus) {
    OperationStatus["FAILED"] = "FAILED";
    OperationStatus["IN_PROGRESS"] = "IN_PROGRESS";
    OperationStatus["PENDING"] = "PENDING";
    OperationStatus["SUCCESS"] = "SUCCESS";
})(OperationStatus || (OperationStatus = {}));
export var HandlerErrorCode;
(function (HandlerErrorCode) {
    HandlerErrorCode["AccessDenied"] = "AccessDenied";
    HandlerErrorCode["AlreadyExists"] = "AlreadyExists";
    HandlerErrorCode["GeneralServiceException"] = "GeneralServiceException";
    HandlerErrorCode["HandlerInternalFailure"] = "HandlerInternalFailure";
    HandlerErrorCode["InternalFailure"] = "InternalFailure";
    HandlerErrorCode["InvalidCredentials"] = "InvalidCredentials";
    HandlerErrorCode["InvalidRequest"] = "InvalidRequest";
    HandlerErrorCode["InvalidTypeConfiguration"] = "InvalidTypeConfiguration";
    HandlerErrorCode["NetworkFailure"] = "NetworkFailure";
    HandlerErrorCode["NonCompliant"] = "NonCompliant";
    HandlerErrorCode["NotFound"] = "NotFound";
    HandlerErrorCode["NotUpdatable"] = "NotUpdatable";
    HandlerErrorCode["ResourceConflict"] = "ResourceConflict";
    HandlerErrorCode["ServiceInternalError"] = "ServiceInternalError";
    HandlerErrorCode["ServiceLimitExceeded"] = "ServiceLimitExceeded";
    HandlerErrorCode["ServiceTimeout"] = "NotStabilized";
    HandlerErrorCode["Throttling"] = "Throttling";
    HandlerErrorCode["Unknown"] = "Unknown";
    HandlerErrorCode["UnsupportedTarget"] = "UnsupportedTarget";
})(HandlerErrorCode || (HandlerErrorCode = {}));
export var ResourceSignalStatus;
(function (ResourceSignalStatus) {
    ResourceSignalStatus["FAILURE"] = "FAILURE";
    ResourceSignalStatus["SUCCESS"] = "SUCCESS";
})(ResourceSignalStatus || (ResourceSignalStatus = {}));
export const AccountGateResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const AccountLimitFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const LoggingConfigFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ActivateTypeInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ActivateTypeOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const AutoDeploymentFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const TypeConfigurationIdentifierFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const BatchDescribeTypeConfigurationsInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const BatchDescribeTypeConfigurationsErrorFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const TypeConfigurationDetailsFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const BatchDescribeTypeConfigurationsOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CancelUpdateStackInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ResourceTargetDefinitionFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ResourceChangeDetailFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ModuleInfoFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ResourceChangeFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ChangeFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ChangeSetHookResourceTargetDetailsFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ChangeSetHookTargetDetailsFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ChangeSetHookFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ChangeSetSummaryFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ContinueUpdateRollbackInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ContinueUpdateRollbackOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ParameterFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ResourceToImportFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const RollbackTriggerFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const RollbackConfigurationFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const TagFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateChangeSetInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateChangeSetOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateStackInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateStackOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeploymentTargetsFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const StackSetOperationPreferencesFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateStackInstancesInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateStackInstancesOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ManagedExecutionFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateStackSetInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateStackSetOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeactivateTypeInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeactivateTypeOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeleteChangeSetInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeleteChangeSetOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeleteStackInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeleteStackInstancesInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeleteStackInstancesOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeleteStackSetInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeleteStackSetOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeregisterTypeInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeregisterTypeOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DescribeAccountLimitsInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DescribeAccountLimitsOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DescribeChangeSetInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DescribeChangeSetOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DescribeChangeSetHooksInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DescribeChangeSetHooksOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DescribePublisherInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DescribePublisherOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DescribeStackDriftDetectionStatusInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DescribeStackDriftDetectionStatusOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DescribeStackEventsInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const StackEventFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DescribeStackEventsOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DescribeStackInstanceInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const StackInstanceComprehensiveStatusFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const StackInstanceFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DescribeStackInstanceOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DescribeStackResourceInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const StackResourceDriftInformationFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const StackResourceDetailFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DescribeStackResourceOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DescribeStackResourceDriftsInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const PhysicalResourceIdContextKeyValuePairFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const PropertyDifferenceFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const StackResourceDriftFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DescribeStackResourceDriftsOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DescribeStackResourcesInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const StackResourceFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DescribeStackResourcesOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DescribeStacksInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const StackDriftInformationFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const OutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const StackFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DescribeStacksOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DescribeStackSetInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const StackSetDriftDetectionDetailsFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const StackSetFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DescribeStackSetOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DescribeStackSetOperationInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const StackSetOperationStatusDetailsFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const StackSetOperationFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DescribeStackSetOperationOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DescribeTypeInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const RequiredActivatedTypeFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DescribeTypeOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DescribeTypeRegistrationInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DescribeTypeRegistrationOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DetectStackDriftInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DetectStackDriftOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DetectStackResourceDriftInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DetectStackResourceDriftOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DetectStackSetDriftInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DetectStackSetDriftOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const EstimateTemplateCostInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const EstimateTemplateCostOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ExecuteChangeSetInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ExecuteChangeSetOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const GetStackPolicyInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const GetStackPolicyOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const GetTemplateInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const GetTemplateOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const GetTemplateSummaryInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ParameterConstraintsFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ParameterDeclarationFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ResourceIdentifierSummaryFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const GetTemplateSummaryOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ImportStacksToStackSetInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ImportStacksToStackSetOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ListChangeSetsInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ListChangeSetsOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ListExportsInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ExportFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ListExportsOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ListImportsInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ListImportsOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const StackInstanceFilterFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ListStackInstancesInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const StackInstanceSummaryFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ListStackInstancesOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ListStackResourcesInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const StackResourceDriftInformationSummaryFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const StackResourceSummaryFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ListStackResourcesOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ListStacksInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const StackDriftInformationSummaryFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const StackSummaryFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ListStacksOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const OperationResultFilterFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ListStackSetOperationResultsInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const StackSetOperationResultSummaryFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ListStackSetOperationResultsOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ListStackSetOperationsInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const StackSetOperationSummaryFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ListStackSetOperationsOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ListStackSetsInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const StackSetSummaryFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ListStackSetsOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ListTypeRegistrationsInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ListTypeRegistrationsOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const TypeFiltersFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ListTypesInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const TypeSummaryFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ListTypesOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ListTypeVersionsInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const TypeVersionSummaryFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ListTypeVersionsOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const PublishTypeInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const PublishTypeOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const RecordHandlerProgressInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const RecordHandlerProgressOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const RegisterPublisherInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const RegisterPublisherOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const RegisterTypeInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const RegisterTypeOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const RollbackStackInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const RollbackStackOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const SetStackPolicyInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const SetTypeConfigurationInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const SetTypeConfigurationOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const SetTypeDefaultVersionInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const SetTypeDefaultVersionOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const SignalResourceInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const StopStackSetOperationInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const StopStackSetOperationOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const TestTypeInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const TestTypeOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const UpdateStackInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const UpdateStackOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const UpdateStackInstancesInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const UpdateStackInstancesOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const UpdateStackSetInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const UpdateStackSetOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const UpdateTerminationProtectionInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const UpdateTerminationProtectionOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ValidateTemplateInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const TemplateParameterFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ValidateTemplateOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
